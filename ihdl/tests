So, let's copypaste the whole hdl.js to firefoxes js-console (ctrl-shift-c -> console)


// Test the NOT gate
a = true
not(a) // false
a = false 
not(a)  // true
// Not gate works as should be

// Test xor and nand
a = b = false // tulisi olla false
nand( nand( a, nand( a, b ) ) , nand( b, nand( a, b ) )); // false

a = false
b = true
nand( nand( a, nand( a, b ) ) , nand( b, nand( a, b ) )); // true

a = true 
b = false
nand( nand( a, nand( a, b ) ) , nand( b, nand( a, b ) )); // true

a = b = true
nand( nand( a, nand( a, b ) ) , nand( b, nand( a, b ) )); // false
//  Ok, so nand and xor is working.

// next in line, AND
a=b=false
and(a,b)    false
a = false
b = true 
and( a,b)    false
a = true
b = false
and(a,b)     false
a = b = true
and (a,b)    true
// AND works


// OR 
a=b=false
or(a,b) //   false
a = false
b = true 
or( a,b)   // true
a = true
b = false
or(a,b)   //  true
a = b = true
or(a,b) //   true
// Or works

// Half-adder
a = b = false 
half_adder(a,b)   // 0+0 = false
global_flag_carry // false
a = false
b = true
half_adder(a,b)   // 0+1 = 1 = true
global_flag_carry // false
a = true
b = false
half_adder(a,b)   // 1+0 = 1 = true
global_flag_carry // false
a = b = true
half_adder(a,b)   // 1+1 = 10 = false
global_flag_carry  // true





// Full adder
a b c   out c
0 0 0    0  0 ok
0 1 0    1  0 ok
1 0 0    1  0 ok  
1 1 0    0  1 ok
0 0 1    1  0
0 1 1    0  1
1 0 1    0  1
1 1 1    1  1

a = b =  global_flag_carry = false
full_adder(a,b)  // false 
global_flag_carry // false
ok

a = false
b = true
global_flag_carry = false
full_adder(a,b)  // true 
global_flag_carry // false
ok

a = true
b = false
global_flag_carry = false
full_adder(a,b)  // true 
global_flag_carry // false

a = true
b = true
global_flag_carry = false
full_adder(a,b)    // false 
global_flag_carry  // true

0 0 1    1  0
0 1 1    0  1
1 0 1    0  1
1 1 1    1  1

a = false
b = false
global_flag_carry = true
full_adder(a,b)    // true 
global_flag_carry  // false


a = false
b = true
global_flag_carry = true
full_adder(a,b)    // false 
global_flag_carry  // true



a = true
b = false
global_flag_carry = true
full_adder(a,b)    // false 
global_flag_carry  // true


a = true
b = true
global_flag_carry = true
full_adder(a,b)    // true
global_flag_carry  // true

So, now we can add?
     1  1 1 
   1001 0101
+  0101 0101  
--------------
   1110 1010
   
global_flag_carry = false;
full_adder(1,1) // false
full_adder(0,0) // true
full_adder(1,1) // false
full_adder(0,0) // true

full_adder(1,1) // false
full_adder(0,0) // true
full_adder(0,1) // true
full_adder(1,0) // true

>> global_flag_carry  // true
true
>> global_flag_carry = false;
false
>> full_adder(1,1) // false
false
>> full_adder(0,0) // true
true
>> full_adder(1,1) // false
false
>> full_adder(0,0) // true
true
>> full_adder(1,1) // false
false
>> full_adder(0,0) // true
true
>> full_adder(0,1) // true
true
>> full_adder(1,0) // true
true

Awesome.
// Full adder works


// Test the eight bit full adder
   console.log(global_program_counter + "  0000 0001");
   global_program_counter =  eight_bit_full_adder(global_program_counter,[false,false,false,false, false,false,false,true]);   
   console.log(global_program_counter + "0000 0010");
   global_program_counter =  eight_bit_full_adder(global_program_counter,[false,false,false,false, false,false,true,false]);   

   console.log(global_program_counter + "  0000 0100");
   global_program_counter =  eight_bit_full_adder(global_program_counter,[false,false,false,false, false,true,false,false]);         
   console.log(global_program_counter + "0010 0000");
   global_program_counter =  eight_bit_full_adder(global_program_counter,[false,false,true,false,  false,false,false,false]);         

   console.log(global_program_counter + "  0100 0000");
   global_program_counter =  eight_bit_full_adder(global_program_counter,[false,true,false,false,  false,false,false,false]);         
   console.log(global_program_counter + "  1000 0000");
   global_program_counter =  eight_bit_full_adder(global_program_counter,[true,false,false,false,   false,false,false,false]);         
   
   console.log(global_program_counter + " Lopullinen");  
   // oh yeah, if someone is reading these, "Lopullinen" means just "Final"
   // as in final result = lopullinen ratkaisu

false,false,false,false, false,false,false,false      0000 0001
false,false,false,false, false,false,false,true       0000 0010
false,false,false,false, false,false,true,true        0000 0100
false,false,false,false, false,true,true,true         0010 0000
false,false,true ,false, false,true,true,true         0100 0000
false,true ,true ,false, false,true,true,true         1000 0000
true,true,true,false,false,true,true,true Lopullinen
11100111

0000 0001
0000 0010
0000 0100
0010 0000
0100 0000
1000 0000+
***********
1110 0111 ok



   console.log(global_program_counter + "  1111 1111");
   global_program_counter =  eight_bit_full_adder(global_program_counter,[true, true, true, true,  true, true, true, true]);         
   console.log(global_program_counter + "  0000 0001");
   global_program_counter =  eight_bit_full_adder(global_program_counter,[false,false,false,false,   false,false,false,true]);         
   console.log(global_program_counter + " Lopullinen");
false,false,false,false,false,false,false,false  1111 1111 index.html:22:4
true,true,true,true,true,true,true,true  0000 0001 index.html:24:4
true,true,true,true,true,true,true,false Lopullinen index.html:26:4 

Nooo!  FF + 01 = FE ?


   console.log(global_program_counter + " + FF");
   global_program_counter =  eight_bit_full_adder(global_program_counter,hex_F.concat(hex_F));         
   console.log(global_program_counter + " + 01");
   global_program_counter =  eight_bit_full_adder(global_program_counter,hex_0.concat(hex_1));         
   console.log(global_program_counter + " Lopullinen");   

false,false,false,false,false,false,false,false + FF index.html:44:4
true,true,true,true,true,true,true,true  1 index.html:46:4
true,true,true,true,true,true,true,false Lopullinen index.html:48:4

// yep, FF+01=FE, so my adder has bug.


full_adder(0,0)
true
full_adder(0,1)
true
full_adder(1,0)
true
full_adder(1,1)
false


( 1111 111 )
  1111 1111
  0000 0001 +
1 0000 0000

global_flag_carry = false;
console.log(full_adder(1,1));
console.log(full_adder(1,0));
console.log(full_adder(1,0));
console.log(full_adder(1,0));
console.log(full_adder(1,0));
console.log(full_adder(1,0));
console.log(full_adder(1,0));
console.log(full_adder(1,0));

// Ooooh, ok, 8 bit adder need's to clear carry to work properly... 
// It shouldn't do that, maby half adder for first?

false,false,false,false,false,false,false,false + FF index.html:42:4
true,true,true,true,true,true,true,true + 01 index.html:44:4
false,false,false,false,false,false,false,false <--- This should be 0000 0000 index.html:46:4

// Awesome! Now the test again...   
   console.log(global_program_counter + "  0000 0001");
   global_program_counter =  eight_bit_full_adder(global_program_counter,[false,false,false,false, false,false,false,true]);   
   console.log(global_program_counter + "0000 0010");
   global_program_counter =  eight_bit_full_adder(global_program_counter,[false,false,false,false, false,false,true,false]);   

   console.log(global_program_counter + "  0000 0100");
   global_program_counter =  eight_bit_full_adder(global_program_counter,[false,false,false,false, false,true,false,false]);         
   console.log(global_program_counter + "0010 0000");
   global_program_counter =  eight_bit_full_adder(global_program_counter,[false,false,true,false,  false,false,false,false]);         

   console.log(global_program_counter + "  0100 0000");
   global_program_counter =  eight_bit_full_adder(global_program_counter,[false,true,false,false,  false,false,false,false]);         
   console.log(global_program_counter + "  1000 0000");
   global_program_counter =  eight_bit_full_adder(global_program_counter,[true,false,false,false,   false,false,false,false]);         
   
   console.log(global_program_counter + " <-- should be 1110 0111");  
   

false,false,false,false,false,false,false,false    0000 0001 index.html:43:4
true,false,false,false,false,false,false,false     0000 0010 index.html:45:4
false,true,false,false,false,false,false,true      0000 0100 index.html:48:4
true,false,true,false,false,false,true,false       0010 0000 index.html:50:4
false,true,false,false,false,false,true,true       0100 0000 index.html:53:4
true,true,false,false,false,false,false,true       1000 0000 index.html:55:4
true,false,false,false,false,false,true,false Lopullinen index.html:58:4


/*
Found the bug at last! 

I have thought my bytes as   msb 6 5 4 3 2 1 lsb 
but I have used them on js as 0  1 2 3 4 5 6 7

On adders the direction is important, so I need to 
reverse the the orfer, but then I need to use .reverse() 
to fix that wrong order.

Now finally that bug is smashed.... For now.

So, ALU has now nop working, and addition is not yet tested.

*/

